datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Settings {
    key   String @id @default(uuid())
    value Json
}

enum UserRole {
    USER
    ADMIN
}

model User {
    id              String        @id @default(uuid())
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt
    firstName       String
    lastName        String
    password        String
    phoneNumber     Int
    email           String        @unique
    isEmailVerified Boolean
    profileImage    String
    role            UserRole      @default(USER)
    interactions    Interaction[]
    playlists       Playlist[]
}

model Interaction {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    songId    String?
    userId    String?
    isLiked   Boolean  @default(false)
    playCount Int
    Song      Song?    @relation(fields: [songId], references: [id])
    User      User?    @relation(fields: [userId], references: [id])
}

model Song {
    id           String        @id @default(uuid())
    interactions Interaction[]
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    Album        Album?        @relation(fields: [albumId], references: [id])
    albumId      String?
    Artist       Artist?       @relation(fields: [artistId], references: [id])
    artistId     String?
    length       Float
    track        Int?
    lyrics       String
    Playlist     Playlist?     @relation(fields: [playlistId], references: [id])
    playlistId   String?
}

model Artist {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    albums    Album[]  @relation(fields: [albumId], references: [id])
    albumId   String?
    songs     Song[]

}

model Album {
    id        String   @id @default(uuid())
    songs     Song[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    artists   Artist[]
    name      String
    cover     String
}

model Playlist {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    User      User?    @relation(fields: [userId], references: [id])
    userId    String?
    songs     Song[]
    name      String
}
